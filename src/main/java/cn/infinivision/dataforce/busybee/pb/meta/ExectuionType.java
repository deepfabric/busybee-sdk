// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meta.proto

package cn.infinivision.dataforce.busybee.pb.meta;

/**
 * <pre>
 * ExectuionType is is the type of a execution operation
 * </pre>
 *
 * Protobuf enum {@code metapb.ExectuionType}
 */
public enum ExectuionType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Direct is an executable operation.
   * </pre>
   *
   * <code>Direct = 0;</code>
   */
  Direct(0),
  /**
   * <pre>
   * Timer is an timer executable.
   * </pre>
   *
   * <code>Timer = 1;</code>
   */
  Timer(1),
  /**
   * <pre>
   * Branch contains several of the operations that will be performed if certain conditions are met.
   * </pre>
   *
   * <code>Branch = 2;</code>
   */
  Branch(2),
  /**
   * <pre>
   * Parallel contains multiple sets of operations that can be executed concurrently.
   * </pre>
   *
   * <code>Parallel = 3;</code>
   */
  Parallel(3),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Direct is an executable operation.
   * </pre>
   *
   * <code>Direct = 0;</code>
   */
  public static final int Direct_VALUE = 0;
  /**
   * <pre>
   * Timer is an timer executable.
   * </pre>
   *
   * <code>Timer = 1;</code>
   */
  public static final int Timer_VALUE = 1;
  /**
   * <pre>
   * Branch contains several of the operations that will be performed if certain conditions are met.
   * </pre>
   *
   * <code>Branch = 2;</code>
   */
  public static final int Branch_VALUE = 2;
  /**
   * <pre>
   * Parallel contains multiple sets of operations that can be executed concurrently.
   * </pre>
   *
   * <code>Parallel = 3;</code>
   */
  public static final int Parallel_VALUE = 3;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ExectuionType valueOf(int value) {
    return forNumber(value);
  }

  public static ExectuionType forNumber(int value) {
    switch (value) {
      case 0: return Direct;
      case 1: return Timer;
      case 2: return Branch;
      case 3: return Parallel;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ExectuionType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ExectuionType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ExectuionType>() {
          public ExectuionType findValueByNumber(int number) {
            return ExectuionType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return cn.infinivision.dataforce.busybee.pb.meta.PB.getDescriptor().getEnumTypes().get(2);
  }

  private static final ExectuionType[] VALUES = values();

  public static ExectuionType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ExectuionType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:metapb.ExectuionType)
}

