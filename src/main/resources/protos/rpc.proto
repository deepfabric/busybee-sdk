syntax = "proto3";

package rpcpb;

import "meta.proto";

option java_multiple_files = true;
option java_package = "cn.infinivision.dataforce.busybee.pb.rpc";
option java_outer_classname = "PB";
option objc_class_prefix = "HLW";


enum Type {
    Set           = 0;
    Get           = 1;
    Delete        = 2;

    BMCreate      = 100;
    BMAdd         = 101;
    BMRemove      = 102;
    BMClear       = 103;
    BMContains    = 104;
    BMCount       = 105;
    BMRange       = 106;

    StartingInstance         = 200;
    StartedInstance          = 201;
    StopInstance             = 202;
    CreateInstanceStateShard = 203;
    UpdateInstanceStateShard = 204;
    RemoveInstanceStateShard = 205;
    InstanceCountState       = 206;
    InstanceCrowdState       = 207;

    QueueAdd      = 300;
    QueueFetch    = 301;

    TenantInit    = 400;
    UpdateMapping = 401;
    GetMapping    = 402;
    UpdateProfile = 403;
    GetProfile    = 404;
}

// SetRequest set a key value pair
message SetRequest {
    bytes  key   = 1;
    bytes  value = 2;
}

// GetRequest get value by key
message GetRequest {
    bytes key = 1;
}

// DeleteRequest remove a key value pair
message DeleteRequest {
    bytes key = 1;
}

// BMCreateRequest create a bitmap
message BMCreateRequest {
    bytes           key   = 1;
    repeated uint32 value = 2;
}

// BMAddRequest add some uint64 to a bitmap
message BMAddRequest {
    bytes           key   = 1;
    repeated uint32 value = 2;
}

// BMRemoveRequest remove some uint64 from a bitmap
message BMRemoveRequest {
    bytes           key   = 1;
    repeated uint32 value = 2;
}

// BMClearRequest clear a bitmap
message BMClearRequest {
    bytes           key   = 1;
}

// BMContainsRequest check some uint64 is in a bitmap
message BMContainsRequest {
    bytes           key   = 1;
    repeated uint32 value = 2;
}

// BMCountRequest returns the count of a bitmap
message BMCountRequest {
    bytes key = 1;
}

// BMRangeRequest returns the limit uint64s that that >= start of a bitmap
message BMRangeRequest {
    bytes           key   = 1;
    uint32          start = 2;
    uint64          limit = 3;
}

// StartingInstanceRequest start a workflow
message StartingInstanceRequest {
    metapb.WorkflowInstance instance  = 1;
}

// StartedInstanceRequest remove a workflow
message StartedInstanceRequest {
    uint64 workflowID = 1;
}

// StopInstanceRequest remove a workflow
message StopInstanceRequest {
    uint64 workflowID = 1;
}

// CreateInstanceStateShardRequest create a instance state
message CreateInstanceStateShardRequest {
    metapb.WorkflowInstanceState state = 1;
}

// UpdateInstanceStateShardRequest update a instance state
message UpdateInstanceStateShardRequest {
    metapb.WorkflowInstanceState state = 1;
}

// RemoveInstanceStateShardRequest remove a instance state
message RemoveInstanceStateShardRequest {
    uint64 workflowID = 1;
    uint32 start      = 2;
    uint32 end        = 3;
}

// InstanceCountStateRequest instance count state
message InstanceCountStateRequest {
    uint64 workflowID = 1;
}

// InstanceCrowdStateRequest instance crowd state
message InstanceCrowdStateRequest {
    uint64 workflowID = 1;
    string name       = 2;
}

// QueueAddRequest add items into a queue
message QueueAddRequest {
    bytes          key   = 1;
    repeated bytes items = 2;
}

// QueueFetchResponse add items into a queue
message QueueFetchRequest {
    bytes  key         = 1;
    bytes  consumer    = 2;
    uint64 afterOffset = 3;
    uint64 count       = 4;
}

// TenantInitRequest init tenant
message TenantInitRequest {
    uint64 id                   = 1;
    uint64 inputQueuePartitions = 2;
}

// UpdateMappingRequest update id mapping request
message UpdateMappingRequest {
    uint64                  id     = 1;
    repeated metapb.IDValue values = 2;
}

// GetMappingRequest get id mapping request
message GetMappingRequest {
    uint64           id   = 1;
    metapb.IDValue   from = 2;
    uint32           to   = 3;
}

// UpdateProfileRequest update profile request
message UpdateProfileRequest {
    uint64 id     = 1;
    uint32 userID = 2;
    bytes  value  = 3;
}

// GetProfileRequest get profile request
message GetProfileRequest {
    uint64 id     = 1;
    uint32 userID = 2;
    string field  = 3;
}

// EmptyResponse empty response
message EmptyResponse {

}

// StringResponse response
message StringResponse {
    string value = 1;
}

// BytesResponse response
message BytesResponse {
    bytes value = 1;
}

// BoolResponse response
message BoolResponse {
    bool  value = 1;
}

// Uint64Response response
message Uint64Response {
    uint64 value = 1;
}

// Uint32SliceResponse response
message Uint32SliceResponse {
    repeated uint32 values = 1;
}

// BytesSliceResponse response
message BytesSliceResponse {
    repeated bytes items      = 1;
    uint64         lastOffset = 2;
}