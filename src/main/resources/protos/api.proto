syntax = "proto3";
package apipb;

import "rpc.proto";

option java_multiple_files = true;
option java_package = "cn.infinivision.dataforce.busybee.pb.api";
option java_outer_classname = "PB";
option objc_class_prefix = "HLW";

// Event is process definition
message Event {
    uint32 userID     = 1;
    uint64 tenantID   = 2;
    uint64 workflowID = 3;
    repeated KV data  = 4;
}

// KV custom KV data
message KV {
    bytes key   = 1;
    bytes value = 2;
}

// Notify notify message
message Notify {
    uint32 userID     = 1;
    bytes  crowd      = 2;
    uint64 tenantID   = 3;
    uint64 workflowID = 4;
    string fromStep   = 5;
    string fromAction = 6;
    string toStep     = 7;
    string toAction   = 8;
}

// Request the busybee request
message Request {
    uint64                          id            = 1;
    rpcpb.Type                      type          = 2;
    rpcpb.SetRequest                set           = 3;
    rpcpb.GetRequest                get           = 4;
    rpcpb.DeleteRequest             delete        = 5;
    rpcpb.BMCreateRequest           bmCreate      = 6;
    rpcpb.BMAddRequest              bmAdd         = 7;
    rpcpb.BMRemoveRequest           bmRemove      = 8;
    rpcpb.BMClearRequest            bmClear       = 9;
    rpcpb.BMRangeRequest            bmRange       = 10;
    rpcpb.BMCountRequest            bmCount       = 11;
    rpcpb.BMContainsRequest         bmContains    = 12;
    rpcpb.QueueAddRequest           queueAdd      = 13;
    rpcpb.QueueFetchRequest         queueFetch    = 14;
    rpcpb.TenantInitRequest         tenantInit    = 15;
    rpcpb.StartingInstanceRequest   startInstance = 16;
    rpcpb.StopInstanceRequest       stopInstance  = 17;
    rpcpb.InstanceCountStateRequest countInstance = 18;
    rpcpb.InstanceCrowdStateRequest crowdInstance = 19;
    rpcpb.UpdateMappingRequest      updateMapping = 20;
    rpcpb.GetMappingRequest         getMapping    = 21;
    rpcpb.UpdateProfileRequest      updateProfile = 22;
    rpcpb.GetProfileRequest         getProfile    = 23;
}

// Response the busybee response
message Response {
    uint64                    id              = 1;
    rpcpb.Type                type            = 2;
    ErrorResponse             error           = 3;
    rpcpb.BytesResponse       bytesResp       = 4;
    rpcpb.BoolResponse        boolResp        = 5;
    rpcpb.Uint64Response      uint64Resp      = 6;
    rpcpb.Uint32SliceResponse uint32SliceResp = 7;
    rpcpb.BytesSliceResponse  bytesSliceResp  = 8;
    rpcpb.StringResponse      stringResp      = 9;
}

// ErrorResponse error response
message ErrorResponse {
    string error = 1;
}